openapi: 3.0.0
info:
  title: Sprinter API
  version: 0.1.0
  contact:
    name: Sprinter
  description: Sprinter API
servers:
  - url: "http://localhost:8080"
paths:
  /items:
    get:
      description: Read all items
      summary: readAllItem
      operationId: readAllItemsDetails
      tags:
        - Items
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageItemDetails'
    post:
      description: Create item
      summary: createItem
      operationId: createItemDetails
      tags:
        - Items
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemDetails"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemDetails"
  /items/{id}:
    get:
      description: Reads details about an item
      summary: readItemDetails
      operationId: readItemDetails
      tags:
        - Items
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemDetails"
    put:
      description: Modify details about an item
      summary: modifyItemDetails
      operationId: modifyItemDetails
      tags:
        - Items
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemDetails"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemDetails"
    delete:
      description: Delete details about an item
      summary: deleteItemDetails
      operationId: deleteItemDetails
      tags:
        - Items
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemDetails"

components:
  schemas:
    BrandDetails:
      title: Brand details
      description: Brand information
      type: object
      properties:
        id:
          description: Brand id.
          type: integer
          format: int64
          example: 1
        creationDate:
          description: Brand creation date.
          type: string
          format: date
          example: '2022-01-01'
        name:
          description: Brand name.
          type: string
          example: 'Adidas'
    ItemDetails:
      title: Item details
      description: Item information
      type: object
      properties:
        id:
          description: Item id.
          type: integer
          format: int64
          example: 1
        creationDate:
          description: Item creation date.
          type: string
          format: date
          example: '2022-01-01'
        referenceCode:
          description: Item reference code.
          type: string
          example: 'IT12345'
        name:
          description: Item name.
          type: string
          example: 'Shirt'
        brand:
          $ref: "#/components/schemas/BrandDetails"
        size:
          description: Item size.
          type: string
          example: 'S'
        material:
          description: Item material.
          type: string
          example: 'Poliester'
        color:
          description: Item color.
          type: string
          example: 'Blanco'
        sport:
          description: Item sport.
          type: string
          example: 'Fitness'
    Pageable:
      description: Minimal Pageable query parameters
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    PageItemDetails:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        last:
          type: boolean
        first:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemDetails'
        number:
          type: integer
          format: int32
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/Sort'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
        offset:
          type: integer
          format: int64
    Sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
